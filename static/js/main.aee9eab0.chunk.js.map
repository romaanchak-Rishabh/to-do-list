{"version":3,"sources":["Auth.js","components/Header.js","components/Public.js","components/InputField.js","components/redux/action/addTodo.action.js","components/Todo.js","components/TodosList.js","components/Protected.js","Router.js","App.js","serviceWorker.js","components/redux/reducer/addTodo.reducer.js","components/redux/store.js","index.js"],"names":["Auth","isAuthenticated","authenticate","this","signout","getAuth","Header","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","login","bind","assertThisInitialized","logout","console","log","react_default","a","createElement","className","react_router_dom","to","onClick","style","border","React","Component","Public","InputField","handleChange","e","addText","target","value","handleSubmit","preventDefault","selected","editAddTodo","text","addTodo","onSubmit","type","name","placeholder","onChange","outline","fontSize","marginTop","width","connect","state","dispatch","todo","payload","obj","deleteTodo","key","editTodo","_ref","idx","display","flexDirection","justifyContent","cursor","padding","borderRadius","todos","margin","height","overflowY","overflowX","map","i","components_Todo","deleteAll","persistTodo","useEffect","textDecoration","components_InputField","components_TodosList","PrivateRoute","component","rest","objectWithoutProperties","react_router","assign","render","pathname","Router","exact","path","Router_PrivateRoute","Protected","App","src_components_Header","src_Router","Boolean","window","location","hostname","match","initState","undefined","setPersist","localStorage","setItem","JSON","stringify","store","createStore","arguments","length","action","parse","getItem","objectSpread","todos2","concat","todo3","filter","todo4","applyMiddleware","logger","ReactDOM","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.aee9eab0.chunk.js","sourcesContent":["const Auth = {\n    isAuthenticated: false,\n    authenticate() {\n      this.isAuthenticated = true;\n    },\n    signout() {\n      this.isAuthenticated = false;\n    },\n    getAuth() {\n        return this.isAuthenticated;\n      }\n  };\n\n  export default Auth;","import React from 'react';\nimport './Header.css';\nimport { Link } from 'react-router-dom';\nimport Auth from '../Auth';\n\nclass Header extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.login=this.login.bind(this);\n        this.logout=this.logout.bind(this);\n    }\n\n    login(){\n        Auth.authenticate();\n        console.log(Auth.getAuth())\n    }\n\n    logout(){\n        Auth.signout();\n    }\n\n    render(){\n        \n        return(\n            <div className='header'>\n                <Link to='/' className='link'>Home</Link><br/>\n                <Link to='Public' className='link'>Public</Link><br/>\n                <Link to='protected' className='link'>Protected</Link><br/>\n                <button onClick={this.login} style={{border: '2px solid coral'}}><Link to='protected' className='link'>Login</Link></button><br/>\n                <button onClick={this.logout} style={{border: '2px solid coral'}}><Link to='/' className='link'>Logout</Link></button>\n            </div>\n        );\n    }\n}\n\nexport default Header;\n","import React from 'react';\n\nconst Public =() => {\n    return <h1> This is a Public route!</h1>\n}\n\nexport default Public;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addText, addTodo, editAddTodo } from './redux/action/addTodo.action';\r\n\r\nclass InputField extends React.Component {\r\n    handleChange = e => this.props.addText(e.target.value);\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        if(this.props.selected || this.props.selected === 0 )\r\n            this.props.editAddTodo({\r\n                value: this.props.text,\r\n                selected: this.props.selected\r\n            });\r\n        else this.props.addTodo(this.props.text);\r\n    }\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <input type='text' name='todo' value={this.props.text} placeholder='Enter your todo' onChange={this.handleChange} style={{outline: 'none', fontSize: '20px', marginTop: '10px', width: '225px'}} />\r\n                <br />\r\n                <br />\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    text: state.text,\r\n    selected: state.selected\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    addTodo: todo => dispatch(addTodo(todo)),\r\n    addText: value => dispatch(addText(value)),\r\n    editAddTodo: obj => dispatch(editAddTodo(obj))\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InputField);","export const persistTodo = () => ({\r\n    type: 'PERSIST_TODOS'\r\n})\r\n\r\nexport const addText = value => ({\r\n    type: 'ADD_TEXT',\r\n    payload: value\r\n})\r\n\r\nexport const addTodo = todo => ({\r\n    type: 'ADD_TODO',\r\n    payload: todo\r\n})\r\n\r\nexport const deleteTodo = key => ({\r\n    type: 'DELETE_TODO',\r\n    payload: key\r\n})\r\n\r\nexport const editTodo = key => ({\r\n    type: 'EDIT_TODO',\r\n    payload: key\r\n})\r\n\r\nexport const editAddTodo = obj => ({\r\n    type: 'EDIT_ADD_TODO',\r\n    payload: obj\r\n})\r\n\r\nexport const deleteAll = () => ({\r\n    type: 'DELETE_ALL'\r\n})","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { deleteTodo, editTodo } from './redux/action/addTodo.action';\r\n\r\nconst Todo = ({todo, idx, deleteTodo, editTodo, selected, text}) => {\r\n    return (\r\n        <div style={{display: \"flex\", flexDirection: \"row\", justifyContent: 'space-between', cursor: 'pointer', padding: '5px', border: '1px solid gray', borderRadius: '2px'}}>\r\n            <div onClick={() => editTodo(idx)}>\r\n                {\r\n                    selected === idx ?\r\n                    text\r\n                    :\r\n                    todo\r\n                }\r\n            </div>\r\n            <div style={{cursor: 'pointer'}} onClick={ () => deleteTodo(idx)}>X</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    text: state.text,\r\n    selected: state.selected\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    deleteTodo: key => dispatch(deleteTodo(key)),\r\n    editTodo: key => dispatch(editTodo(key))\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Todo);","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport Todo from './Todo';\r\n\r\nconst TodosList = ({todos}) => {\r\n    return (\r\n        <div style={{display: \"flex\", flexDirection: \"column\", width: '250px', margin: '0 auto', height: '250px', overflowY: 'auto', overflowX: 'hidden'}}>\r\n            {\r\n                todos.map((todo, i) => (\r\n                    <Todo key={i} todo={todo} idx = {i} />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    todos: state.todos\r\n})\r\nexport default connect(mapStateToProps)(TodosList);","import React, { useEffect } from 'react';\nimport \"./Protected.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport InputField from './InputField';\nimport TodosList from './TodosList';\nimport { connect } from 'react-redux';\nimport { deleteAll, persistTodo } from './redux/action/addTodo.action';\n\n\nconst Protected = ({deleteAll, persistTodo}) => {\n  useEffect(() => {\n    persistTodo();\n  }, [persistTodo])\n  return (\n    <div className='protected'>\n    <h1 style={{ textDecoration: 'underline', marginTop: '20px' }}>Todo's App</h1>\n    <p>Not authenticated with username and password, so everyone can access it, but made login, logout functions.</p>\n    <p>PS. It will just take few lines of code to authenticate username and password</p>\n      <InputField />\n      <TodosList />\n      <div>\n        <button onClick={deleteAll}>Delete All</button>\n      </div>\n    </div>\n  );\n}\n\nconst mapDispatchToProps = dispatch => ({\n  deleteAll: () => dispatch(deleteAll()),\n  persistTodo: () => dispatch(persistTodo())\n})\nexport default connect(null, mapDispatchToProps)(Protected);","import React, {Component} from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport App from './App';\nimport Public from './components/Public';\nimport Protected from './components/Protected';\nimport Auth from './Auth';\n\nconst Router = (props) => (\n  \n    <Switch>\n      \n      <Route exact path='/public' component={Public}/>\n      <PrivateRoute path=\"/protected\" component={Protected} />\n    </Switch>\n  \n)\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      Auth.getAuth() ? (\n        <Component {...props} />\n      ) : (\n        <Redirect\n          to={{\n            pathname: \"/\"\n          }}\n        />\n      )\n    }\n  />\n);\n\n\nexport default Router;","import React, { Component } from 'react';\nimport './App.css';\nimport  Header from './components/Header';\nimport Router from './Router';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n          <Header/>\n          <Router/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n    todos: [],\r\n    text: '',\r\n    selected: undefined\r\n}\r\n\r\nconst setPersist = (todos) => window.localStorage.setItem('todos2', JSON.stringify(todos));\r\nexport const addTodo = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'PERSIST_TODOS':\r\n            const todos = JSON.parse(window.localStorage.getItem('todos2'));\r\n            return { ...state, todos: todos ? todos: [] };\r\n        case 'ADD_TEXT':\r\n            return { ...state, text: action.payload };\r\n        case \"ADD_TODO\":\r\n            if(action.payload === '') {\r\n                return state;\r\n            }\r\n            else\r\n                var todos2 = state.todos.concat(action.payload);\r\n                window.localStorage.setItem('todos2', JSON.stringify(todos2));\r\n                return { ...state, todos: todos2, text: '' };\r\n        case \"DELETE_TODO\":\r\n            const todo3 = state.todos.filter((todo, i) => i !== action.payload)\r\n            setPersist(todo3)\r\n            return { ...state, todos: todo3};\r\n        case 'EDIT_TODO':\r\n            return { ...state, text:state.todos[action.payload], selected: action.payload } ;  \r\n        case 'EDIT_ADD_TODO' :\r\n            const todo4 = state.todos.map((todo, i) => i !== action.payload.selected ? todo: action.payload.value);\r\n            setPersist(todo4)\r\n            return { ...state, todos: todo4, selected: undefined, text: ''};\r\n        case 'DELETE_ALL':\r\n            setPersist([])\r\n            return { ...state, todos: [], text: '' };\r\n        default:\r\n            return state;\r\n    }\r\n}","import {createStore, applyMiddleware} from 'redux';\r\nimport logger from 'redux-logger';\r\nimport { addTodo } from './reducer/addTodo.reducer';\r\n\r\nexport const store = createStore(addTodo, applyMiddleware(logger));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { store } from '../src/components/redux/store'\n\nReactDOM.render(\n    <Provider store={store}>\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}